<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zenz</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-02-14T04:36:08.380Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Michael Zeng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>linux GUI application on windows docker</title>
    <link href="http://yoursite.com/2019/02/13/linux-GUI-application-on-windows-docker/"/>
    <id>http://yoursite.com/2019/02/13/linux-GUI-application-on-windows-docker/</id>
    <published>2019-02-13T22:49:08.000Z</published>
    <updated>2019-02-14T04:36:08.380Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="linux-GUI-application-on-windows-docker"><a href="#linux-GUI-application-on-windows-docker" class="headerlink" title="linux GUI application on windows docker"></a>linux GUI application on windows docker</h2><p>To run a GUI application on windows, there are multiple ways of doing this. </p><h3 id="Install-Linux-on-your-computer"><a href="#Install-Linux-on-your-computer" class="headerlink" title="Install Linux on your computer"></a>Install Linux on your computer</h3><p>Honestly, this is the best way I recommend. Linux is a very popular system that programmers set their working environment on. For example, if you want to start programming an Android App that contains an object tracking functionality, usually you will start from TensorFlow`s Android demo, which, only supports Linux for compilation.</p><p>To install Linux on your Computer, you can go to this tutorial:</p><blockquote><p><a href="https://www.tecmint.com/install-ubuntu-alongside-with-windows/" target="_blank" rel="noopener">https://www.tecmint.com/install-ubuntu-alongside-with-windows/</a></p></blockquote><h3 id="Use-Docker"><a href="#Use-Docker" class="headerlink" title="Use Docker"></a>Use Docker</h3><p>If you really really hate to have two system on your computer, you can try Docker.</p><p>Docker is close to a virtual machine, but is far more light-weighted and faster. It provides the basic functionality for compiling and debugging, but also allow using a SDE to accelerate your programming.</p><h4 id="Install-Docker"><a href="#Install-Docker" class="headerlink" title="Install Docker"></a>Install Docker</h4><p>To install docker, first go to docker`s website:</p><blockquote><p><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></p></blockquote><p>But in most cases, you won`t be willing to pay for the Docker Desktop for Mac/Windows, so please go to this page and install docker toolbox:</p><blockquote><p><a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="noopener">https://docs.docker.com/toolbox/toolbox_install_windows/</a></p></blockquote><p>Just follow the default settings, and get docker toolbox installed(install git for windows if you don`t have it).</p><h4 id="Install-Xming"><a href="#Install-Xming" class="headerlink" title="Install Xming"></a>Install Xming</h4><p>To run GUI application, Xming should also be installed, and here`s where you can try:</p><blockquote><p><a href="https://sourceforge.net/projects/xming/" target="_blank" rel="noopener">https://sourceforge.net/projects/xming/</a></p></blockquote><h4 id="Run-GUI-Application-on-Linux-Container"><a href="#Run-GUI-Application-on-Linux-Container" class="headerlink" title="Run GUI Application on Linux Container"></a>Run GUI Application on Linux Container</h4><p>First, make sure you run the “Docker Quickstart Terminal” Once to get docker in place.</p><p>Then, open a CMD, and input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">ipconfig</span><br></pre></td></tr></table></figure></p><p>Then all ip that you are using should show up.</p><p>Copy the ipv4 address below “Ethernet adapter VirtualBox Host-Only Network”, and paste it into </p><blockquote><p>C:\Program Files (x86)\Xming\X0.hosts</p></blockquote><p>like this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">localhost</span><br><span class="line">192.168.99.1</span><br></pre></td></tr></table></figure><p>Now, in your “Docker Quickstart Terminal”, input<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">export DISPLAY=192.168.99.1:0.0</span><br><span class="line">docker run -it --privileged -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix ubuntu bash</span><br></pre></td></tr></table></figure></p><p>After finish pulling the image, install all necessary libraries and try the gui if it`s working correctly, in the terminal:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">apt update</span><br><span class="line">apt install vim git build-essential software-properties-common apt-transport-https wget libasound2 libxss1 dbus </span><br><span class="line">gedit</span><br></pre></td></tr></table></figure></p><p>Now you should see the window of gedit.<br>Optionally, you can have an IDE in the container, and I personally recommend CLion, here`s where you can find it:</p><blockquote><p><a href="https://www.jetbrains.com/clion/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/clion/download/#section=linux</a></p></blockquote><p>after downloading the .tar.gz file, close gedit and copy the .tar.gz file into the container:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">docker ps //this command shows the containers that are running</span><br><span class="line">docker cp /path/to/file CONTAINER_ID:/path/to/destination</span><br></pre></td></tr></table></figure></p><p>then in the container`s terminal, extract it and:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">cd clion.xx.xx/bin</span><br><span class="line">./clion.sh</span><br></pre></td></tr></table></figure><p>Now it should be working</p>]]></content>
    
    <summary type="html">
    
      A simple tutorial for how to run linux GUI application on windows Docker
    
    </summary>
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>How to use Github II - Work on independent branch</title>
    <link href="http://yoursite.com/2019/01/28/How-to-use-Github-II-Work-on-independent-branch/"/>
    <id>http://yoursite.com/2019/01/28/How-to-use-Github-II-Work-on-independent-branch/</id>
    <published>2019-01-29T01:14:46.000Z</published>
    <updated>2019-01-29T01:33:32.336Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="How-to-work-with-branch"><a href="#How-to-work-with-branch" class="headerlink" title="How to work with branch"></a>How to work with branch</h2><h3 id="Why-Branch"><a href="#Why-Branch" class="headerlink" title="Why Branch?"></a>Why Branch?</h3><p>In the last chapters, we have successfully set up github and we can use github to manage our code now. But as github is a tool that can help programmers cooperate, it would be a good idea to learn some advanced skills.</p><p>Suppose we are writing a game, it is often that different group members are assigned different part of the program, some might be working on GUI, others might be working on the game or AI. When programmers working on the same part and want to communicate or combine their work, it would be a great idea to let programmers working on different part use a different branch of the same repo for their part, where codes of different branches will never affect each other unless you decide to merge them.</p><h3 id="Creating-new-branch"><a href="#Creating-new-branch" class="headerlink" title="Creating new branch"></a>Creating new branch</h3><p>To create a new branch is simple, first in your terminal or git bash, cd to your project directory, input the following command:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b new_branch_name</span><br></pre></td></tr></table></figure><p>Then you will be at a new branch.</p><p>Now, to push your code to remote repository, input the following commands:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add *</span><br><span class="line">git commit -m &quot;Test New Branch&quot;</span><br><span class="line">git push --set-upstream origin new_branch_name</span><br></pre></td></tr></table></figure><p>Where the “new_branch_name” should be the same as the one you created with git checkout.</p><h3 id="Merging-branch"><a href="#Merging-branch" class="headerlink" title="Merging branch"></a>Merging branch</h3><p>Suppose you want to merge files in new_branch_name to master branch, input</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master #switch back to master branch</span><br><span class="line">git merge new_branch_name</span><br></pre></td></tr></table></figure><p>Then, if you no longer need the new branch, input</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d new_branch_name</span><br></pre></td></tr></table></figure><p>Have a try~~~</p>]]></content>
    
    <summary type="html">
    
      A simple tutorial for working on independent branch
    
    </summary>
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>How to Use Github I - Quick Start</title>
    <link href="http://yoursite.com/2019/01/23/How-to-Use-Github/"/>
    <id>http://yoursite.com/2019/01/23/How-to-Use-Github/</id>
    <published>2019-01-24T06:11:25.000Z</published>
    <updated>2019-01-29T01:33:41.664Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="How-to-use-Github"><a href="#How-to-use-Github" class="headerlink" title="How to use Github"></a>How to use Github</h2><h3 id="Create-a-Github-account"><a href="#Create-a-Github-account" class="headerlink" title="Create a Github account"></a>Create a Github account</h3><p>Create a github account here <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p><h3 id="Install-Github-Desktop"><a href="#Install-Github-Desktop" class="headerlink" title="Install Github Desktop"></a>Install Github Desktop</h3><p>Download and install Github Desktop here:<br><a href="https://desktop.github.com/" target="_blank" rel="noopener">https://desktop.github.com/</a></p><p>After installation, you should be able to use git command directly.Try this:</p><blockquote><p>git –version</p></blockquote><p>it should print sth like:</p><blockquote><p>git version 2.14.1.windows.1  </p></blockquote><p><br></p><h5 id="For-windows-user-you-are-recommended-to-install-git-for-Windows"><a href="#For-windows-user-you-are-recommended-to-install-git-for-Windows" class="headerlink" title="For windows user, you are recommended to install git for Windows"></a>For windows user, you are recommended to install git for Windows</h5><p>Install from here: <a href="https://git-scm.com/download/win" target="_blank" rel="noopener">https://git-scm.com/download/win</a></p><p>It will accelerate your development.</p><h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><p>Go to Github <a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>, after you login, create a new repository</p><p><img src="/images/Github/Go_to_Personal.png" alt=""></p><p>Input a name for your new repo, add any description or initialize with a README if you want. For example, we create a Hello-Git Repo here.<br>Now copy the http link of your new repo</p><p><img src="/images/Github/Copy_Http_Link.PNG" alt=""></p><p>go to wherever you want to place your local project directory, open commend promt(or right click and “git bash here”)</p><p>input the following commend:</p><blockquote><p>git clone your_http_link</p></blockquote><p><img src="/images/Github/git_clone.PNG" alt=""></p><p>now you have it cloned to your local computer. <br><br>cd into the project directory, in our example it`s Hello-Git, and input the following commend;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch test.MD #create any file</span><br><span class="line">git add * #add all files and directories in the project directory to temporary </span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>Now you can see your project has been updated online.</p><p>Suppose others has updated something to your repo, do</p><blockquote><p>git pull</p></blockquote><p>and then you can see the changes locally</p><h3 id="Can-I-use-git-without-cloning-into-a-new-directory"><a href="#Can-I-use-git-without-cloning-into-a-new-directory" class="headerlink" title="Can I use git without cloning into a new directory?"></a>Can I use git without cloning into a new directory?</h3><p>Yes you can.<br>Open git bash, or cmd, or terminal, cd to your project directory and type:</p><blockquote><p>git init</p></blockquote><p>It will create a .git diretory for you.<br>Then let`s bind the project to your remote project repo:</p><blockquote><p>git remote add origin your_http_link</p></blockquote><p>Before you start working, pull the repo:</p><blockquote><p>git pull</p></blockquote><p>If you want to build a new branch, input:</p><blockquote><p>git checkout -b new_branch_name</p></blockquote><p>Now you are in a new branch. You can now begin your work.<br>If you want to upload to your repo, try:</p><blockquote><p>git add *<br><br>git commit -m “First Commit”</p></blockquote><p>If you are going to push for the first time, since there is no such branch as you just<br>created, remember to input:</p><blockquote><p>git push –set-upstream origin new_branch_name</p></blockquote><p>After that you can just input:</p><blockquote><p>git push</p></blockquote><p>to upload your file</p><h3 id="Optional"><a href="#Optional" class="headerlink" title="Optional:"></a>Optional:</h3><p>You can use ssh to push without inputing your username and password every time.  </p><blockquote><h5 id="For-windows-user-only"><a href="#For-windows-user-only" class="headerlink" title="For windows user only:"></a>For windows user only:</h5><p>using cmd directly doesn`t work currently as a result of win10 update.<br>Thus, you need Git For Windows to use ssh.  </p></blockquote><p>First, open git bash in windows, or terminal in mac. Input the following command:</p><blockquote><p>ssh-keygen -t rsa -b 4096 -C “<a href="mailto:your_email@example.com" target="_blank" rel="noopener">your_email@example.com</a>“</p></blockquote><p>Just use default configuration, for more info, go to <a href="https://help.github.com/articles/working-with-ssh-key-passphrases/" target="_blank" rel="noopener">https://help.github.com/articles/working-with-ssh-key-passphrases/</a></p><p>If you use default location, you should be able to find your generated ssh keys in </p><blockquote><p>~/.ssh</p></blockquote><p>Where there should be two files, id_rsa and id_rsa.pub.</p><p>Second, open your id_rsa.pub, copy everything inside.<br>Then open your personal github account, go to settings-&gt;SSH and GPG keys -&gt;New SSh key, paste there.</p><p><img src="/images/Github/Go_To_Settings.PNG" alt=""></p><p>Third, create a file ~/.bashrc, paste the following and save:  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   </span><br><span class="line">env=~/.ssh/agent.env</span><br><span class="line"></span><br><span class="line">agent_load_env () &#123; test -f &quot;$env&quot; &amp;&amp; . &quot;$env&quot; &gt;| /dev/null ; &#125;</span><br><span class="line"></span><br><span class="line">agent_start () &#123;</span><br><span class="line">    (umask 077; ssh-agent &gt;| &quot;$env&quot;)</span><br><span class="line">    . &quot;$env&quot; &gt;| /dev/null ; &#125;</span><br><span class="line"></span><br><span class="line">agent_load_env</span><br><span class="line"></span><br><span class="line"># agent_run_state: 0=agent running w/ key; 1=agent w/o key; 2= agent not running</span><br><span class="line">agent_run_state=$(ssh-add -l &gt;| /dev/null 2&gt;&amp;1; echo $?)</span><br><span class="line"></span><br><span class="line">if [ ! &quot;$SSH_AUTH_SOCK&quot; ] || [ $agent_run_state = 2 ]; then</span><br><span class="line">    agent_start</span><br><span class="line">    ssh-add</span><br><span class="line">elif [ &quot;$SSH_AUTH_SOCK&quot; ] &amp;&amp; [ $agent_run_state = 1 ]; then</span><br><span class="line">    ssh-add</span><br><span class="line">fi</span><br><span class="line">ssh-add ~/.ssh/id_rsa</span><br><span class="line">unset env</span><br></pre></td></tr></table></figure><p>Open a new git bash and now you should be able to access our repo with ssh.<br>Don`t forget to go to your project directory and input:</p><blockquote><p>git remote set-url origin git@your_git_repo_link</p></blockquote><p>To let git track your remote branch through ssh.</p>]]></content>
    
    <summary type="html">
    
      A simple tutorial for Github
    
    </summary>
    
      <category term="Tutorial" scheme="http://yoursite.com/categories/Tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>Medical Drone System</title>
    <link href="http://yoursite.com/2018/12/13/Medical-Drone-System/"/>
    <id>http://yoursite.com/2018/12/13/Medical-Drone-System/</id>
    <published>2018-12-14T02:02:34.000Z</published>
    <updated>2019-01-27T01:31:39.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Emergent medical situations happen every day and everywhere and require proper treatment. However, the current ambulance distribution system is far from effective on providing emergent medical service due to the restriction of time, location, traffic situation, etc. In this case, many people who encounter emergent medical situations do not receive proper treatment and may face threats to their lives. A more effective way to provide urgent medical service is required.</p><p>As drones is more widely used nowadays, it has become a very useful tool for entertainment, photographing, and monitoring. However, it has never been used in providing immediate medical service. Drones have great flexibility and can travel a distance of half a kilometer in a few minutes. When an urgent medical situation occurs, a drone can reach the scene and carry a moderate amount of medical supplies in a few minutes. Meanwhile, an ambulance may take 15-20 minutes to reach the scene and provide help. There is a huge potential for drones to help dealing with simple but urgent medical situation like heart attack, asthma, epilepsy. When facing a complex medical situation, drones are not capable of delivering better help than ambulances do, but in other cases, drones can provide more instant service than ambulances do, which may be crucial in saving peoples life. Instead of replacing the current ambulances distribution system, we plan to build a medical drone system that aims to be a supplement to the ambulances distribution system, which can remarkably reduce the workload of system and provide more effective service. The system is great for places like schools, park, shops malls and can provide medical supply (mainly medicines) for medical situations including heart attack, asthma, epilepsy, etc.</p><h2 id="Purpose"><a href="#Purpose" class="headerlink" title="Purpose"></a>Purpose</h2><p>The purpose of the project is to design a medical drone system that allows its users to acquire medical support delivered by an AI-controlled drone under emergencies.</p><h2 id="Objective"><a href="#Objective" class="headerlink" title="Objective"></a>Objective</h2><p>The objectives of the project are to establish a system, which includes user application, network server, automatic drone controller, and a drone. Users are supposed to be able to require medical support on their smartphones with the application installed. The server should receive request from users and send the request to the drone controller. After processing the request, the drone controller should be able to fly the drone automatically to users and deliver the medical support they have required.</p><h2 id="Approach"><a href="#Approach" class="headerlink" title="Approach"></a>Approach</h2><p>Basic Components</p><p><img src="/images/Classes/EECS159/Slides.jpg" alt=""></p><p>As Shown in the Graph, the physical component of the project can be divided into 4 parts:</p><ol><li>A user app that allows the user to send request according to the user`s need.</li><li>A server that can answer the request and communicate with the drone control device</li><li>An App for the controlling Android device to communicate with server and control the drone.</li><li>Computer Vision Application on the controlling device to help identifying and locating the user.</li></ol><p>Procedure Graph:Procedure Graph:</p><p><img src="/images/Classes/EECS159/Procedure.jpg" alt=""></p><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><ol><li>User App Development</li></ol><p>1.1.     Description</p><p>We will build an Android APP that will implement the functionalities we need.</p><p>1.2.    Functions</p><p>1.2.1    Allow users to select medical support type and send request to our server</p><p>1.2.2    Show the current drone location through google map</p><p>1.2.3    Show the current camera vision of the drone on the user App</p><ol start="2"><li>Server Building</li></ol><p>2.1    Description </p><p>We will use a cloud server provided by Google with a 1 year`s free trial to receive the request from user App and send it to the controlling Android device.</p><p>2.2    Functions</p><p>2.2.1    Receive the request sent from user App based on Ubuntu 18.04</p><p>2.2.2    Store the request and GPS information in the cloud server </p><p>2.2.3    Automatically process the request and send it to the controller</p><p>2.2.4    Receive current video captured by the drone and send it to the User App</p><ol start="3"><li>Controlling Android Device App Development</li></ol><p>3.1.    Description</p><p>We plan to use DJI drone as our primary device. DJI is the world’s leader in commercial and civilian drone industry, accounting for over 70% of the drone market. (Wikipedia, 2018) DJI`s drone product is widely considered to be safe and reliable, with a mature developer’s toolkit for developers to deploy their application.</p><p>We consider connecting the controlling device with the server through the Internet. In addition, we make a backup plan for our connection.</p><p>3.2.    Connection between Server</p><p>Basically, we plan to connect the controlling device with our server through Internet.</p><p>3.2.1    Backup Plan</p><p>Since we are not professional in Network Programming, it is possible that the stability and speed of the connection between controlling device and server is not enough satisfying, which may cause safety issues. In such case we will set our personal laptop as the server, and connect the controlling device and server with Bluetooth, which can provide satisfying stability and speed for connection but may limit the ability to answer multiple requests.</p><p>3.3.    Controlling</p><p>DJI provides a mature developer’s toolkit-MobileSDK, providing full access to all DJI drone`s capabilities. With MobileSDK we can simplify low level functionality developing such as flight stabilization, battery management or signal transmission and focus on our application. (DJI Company, 2018)</p><p>We will develop our application base on the MobileSDK and integrate other necessary functions.</p><ol start="4"><li>Locating and Image Processing</li></ol><p>4.1.    Goals:</p><p>We set 3 goals for user locating.</p><p>Basic:</p><p>The drone will locate the user through their GPS information, and then land nearby. The drone will land with a safe margin of 6 meters away from the user.</p><p>Advance:</p><p>We identify the user through his posture: we consider to ask the user to do a special posture (like raising the user`s hand or lying on the ground) so that we can identify the user and land near the user.</p><p>Ultimate:</p><p>We still assume the user are in a special posture. In addition to this we will do a 3D reconstruction from the original image and let the drone do self-navigation.</p><p>We also make two backup plans for our locating mission.</p><p>4.2.    Model Selection</p><p>We plan to use YOLOv3 or TinyYOLOv3 to do Object Detection. YOLO is a deep Object Detection model with a high processing speed and a satisfying accuracy. (Joseph Redmon, 2015) YOLOv3 can provide a much better accuracy with a satisfying performance. (J. Redmon, 2018)</p><p>4.3.    Backup Plan1: Process On Server </p><p>In case the compute capability of the Android device does not meet our requirement, we will do the image processing on the server and send the control command to the controller directly.</p><p>4.4.    Backup Plan2: AprilTag</p><p>AprilTags are 2D barcodes with a corresponding library that helps to localization.</p><p><img src="/images/Classes/EECS159/apriltags.png" alt=""></p><p>The library will detect any AprilTags in the image and return a unique ID, coordinates for each AprilTag, if the size is known and camera is calibrated.</p><p>We plan to set some special locations and place some AprilTag on it, so that after receiving the request the drone will fly to the nearest AprilTag location to the user and land on it through locating the AprilTags. User can go to the nearest AprilTag spot to acquire medical support delivered by drone. (Olson, 2011)</p><ol start="5"><li>Others</li></ol><p>Reason for Drone Selection:</p><p>Instead of building a drone from startup, we plan to use DJI drone which is safer and more stable. DJI provides a mature developer’s toolkit for drone controlling, which will allow us to focus more on our application. In addition, since we need to do user identifying, we need the drone to transmit current image to our Android device or server to analyze the image. Building such a system with a considerable stability requires professional knowledge on communication, which is out of our capability, and DJI products provides exactly the function we need with high quality.</p><p>Reason for Separating Controlling Device and Server:</p><p>We plan to only use one drone for our project. However, in order to build a “system” that allows multiple request to be answer simultaneously, we want to separate the request answering part and the controlling part. In addition, we don`t want to build our system on a DIY connection between drone and server, instead the connection build by DJI is much more trustworthy, which also accounts for our choice.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>DJI Company. (Sep.4th, 2018). Mobile SDK Introduction. Source: DJI Developer: <a href="http://developer.dji.com/mobile-sdk/documentation/introduction/mobile_sdk_introduction.html" target="_blank" rel="noopener">http://developer.dji.com/mobile-sdk/documentation/introduction/mobile_sdk_introduction.html</a></p><p>J. Redmon, A. F. (2018). Yolov3: An incremental improvement.</p><p>Joseph Redmon, S. D. (2015). You Only Look Once: Unified, Real-Time Object Detection. The IEEE Conference on Computer Vision and Pattern Recognition (CVPR) (pp. 779-788). CVPR 2016.</p><p>Olson, E. (2011). AprilTag: A robust and flexible visual fiducial system. Proceedings of the IEEE International Conference on Robotics and Automation (ICRA).</p><p>Wikipedia. (Nov.1st, 2018). DJI (company). Retrieved from Wikipedia: <a href="https://en.wikipedia.org/wiki/DJI_(company)" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/DJI_(company)</a></p>]]></content>
    
    <summary type="html">
    
      UCI Senior Design Project
    
    </summary>
    
      <category term="Project" scheme="http://yoursite.com/categories/Project/"/>
    
    
      <category term="UCI" scheme="http://yoursite.com/tags/UCI/"/>
    
  </entry>
  
  <entry>
    <title>Backward Theorem Proving Innovated Geometry Problem Solver</title>
    <link href="http://yoursite.com/2018/12/13/Backward-Theorem-Proving-Innovated-Geometry-Problem-Solver/"/>
    <id>http://yoursite.com/2018/12/13/Backward-Theorem-Proving-Innovated-Geometry-Problem-Solver/</id>
    <published>2018-12-14T01:06:02.000Z</published>
    <updated>2019-01-27T01:31:49.473Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><p>As the term project of EECS118: Knowledge Engineering and Software Engineering, it requires students to make a problem solver for an assigned problem on Geometry as well as a web application to show it`s problem solving ability.</p><p>Although the problem looks simple, we can actually go deeper and figure out a very tricky, interesting and more generic way to solve this kind of problem, that is innovated from Backward Theorem Proving introduced by the professor in his lecture.</p><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Here`s the problem I am assigned:</p><p><img src="/images/Classes/EECS118/AssignedProblem.png" alt=""></p><p>A triangle and a circle have five intersection points: One intersection is on a vertex of the triangle. There is one intersection on each one of the two sides of the triangle. Two other intersections are on the third side of the triangle. </p><p>Try to figure out all solvable values from ones that are defined by the user.</p><p><img src="/images/Classes/EECS118/geo.png" alt=""></p><p>The marked elements in this picture are the values that I am going to solve.</p><p>User can define whatever value for any of the elements shown above. Also, the user can define whatever number of elements. On the other hand, the solver need to solve all solvable values based on the rules of geometry.</p><h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><h3 id="Backward-Theorem-Proving"><a href="#Backward-Theorem-Proving" class="headerlink" title="Backward Theorem Proving"></a>Backward Theorem Proving</h3><p>Backward Theorem Proving means you can start from the theorem you need to prove, go backwards to the axioms you use. When you can`t find an axiom in the database, go to the rules to find if you can solve for this axiom through another rules based on the database. (Nilsson, 1998)</p><h3 id="How-to-solve-a-triangle"><a href="#How-to-solve-a-triangle" class="headerlink" title="How to solve a triangle"></a>How to solve a triangle</h3><p>For a triangle, it contains 6 main elements, 3 angles and 3 sides. A triangle can be uniquely solved if any of the following pattern of values for the triangle is given (WIKIPEDIA, 2018):</p><ul><li>Three sides (SSS)</li><li>Two sides and the included angle (SAS)</li><li>Two sides and an angle not included between them (SSA), if the side length adjacent to the angle is shorter than the other side length.</li><li>A side and the two angles adjacent to it (ASA)</li><li>A side, the angle opposite to it and an angle adjacent to it (AAS).</li><li>Three angles (AAA) on the sphere (but not in the plane).</li></ul><p>And there are 3 rules that can be used to solve a triangle from the above patterns:</p><ul><li>Law of cosines</li><li>Law of sines</li><li>Sum of Angles</li></ul><h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><p>Let`s look at a simple problem like this:</p><p><img src="/images/Classes/EECS118/SimpleProblem.png" alt=""></p><p>Now, suppose we need to solve for angle CAB, what will you do? Many were trying to do something like this:</p><p>CAB=[CAB, pi-CBA-ACB,…(more SSS,SAS stuff)] (I call this function list)</p><p>First you want to focus on one single triangle, so you implement all the AAA, SSS stuff in the function list. If the user inputs enough variables that can solve the value we want by one of the function in the function list, then the angle CAB is solved. And then, you notice that if the user inputs the value of ABC and DCE, the CAB can also be solved, so you need to add pi-CBA-DCE to your function list, and pi-(pi-CDE-CED)-CBA as well. This can simply be too much work if you need to design a function list for each element and after all, it`s not pythonic at all.</p><p>Another problem you might encounter is that even if there are only two shapes, say one line and one triangle, there can be multiple situations.</p><p><img src="/images/Classes/EECS118/TwoSituation.png" alt=""></p><p>If you try to build a function list for each element times a function list for each situation, that would be disastrous.</p><p>So, we must try some other ideas to simplify our work.</p><p>Now, if you can remember what professor taught about backward theorem proving in his lectures ( also in the exam HAHAHA) , it could be an excellent methodology to follow in order to solve this problem elegantly. </p><p><br><br><br>Let`s go back to our first question again</p><p><img src="/images/Classes/EECS118/SimpleProblem.png" alt=""></p><p>Instead of building a function list for all the elements, let<code>s design a Python class for each element with a rules set integrated in. Now, suppose we still want to solve for CAB, the user inputs CBA and DCE. Instead of representing the relationship between CAB, ABC, DCE explicitly, let</code>s try backward theorem proving. We try to use AAA to solve for CAB, and we got ABC, but when we need ACB, it was not given. So let`s view ACB to be a theorem we are going to prove, and we go to the rules set integrated in the Python class ACB, and then we find the rule ACB=DCE, so ACB is proved (solved). With this method the we can accelerate the programming of our solvers largely.</p><p>So what benefit can we get by following this methodology?</p><p>First, you don<code>t need to build a long function list. Like solving CAB in one single triangle scale, instead of implementing all the SSS AAA stuff, just implement the law of sine, law of cossine, and law of angle. And that</code>s it, the triangle will be uniquely solved if 3 elements are given.</p><p>Second, you can divide inner and outer relationships. For inner relationship, I mean the ones within one single triangle scale, which means the law of sine, cossine and angle can always help you uniquely solve the one triangle problem. Now, let`s talk about outer relationship. Take ACB as an example, ACB is only connected to some outer elements, like DCE, DC and CE. Which means we only need to implement the relationship between ACB and DCE, DC and CE, and that’s enough, if any of the elements inside triangle ACB can be solved with the help from outer relationship, then it will be solved by backward theorem proving, where elements have relationship with outer elements will serve as pipes or windows like angle ACB. </p><p>Third, this design philosophy can provide you a methodology to follow when trying to design the rules. Like our example ACB, when designing rules we just need to focus on the ones that are directly connected to the one we consider, like DCE, DCE and CE, and CDE? that’s too far away from ACB so we don`t need to consider it but let backward theorem proving do the job Instead.</p><p>Forth, this also helps to solve multiple situations problem. As we know rules can be divided into two kinds: inner and outer, we just need to build inner once and build different outer rules for different situation, and in our program, we just need to inherit our inner class and implement outer rules. </p><p>Fifth, this philosophy provides us with some vague ideas about how to answer the question the professor asked in the lecture: how many inputs do we need to solve the problem completely? In our example problem, knowing that 3 elements can uniquely solve a triangle, we know that we need 6 to solve for two triangles, and the combination of this 6 elements is not infinite. But for ACB, there is a rule that makes the elements we need to solve for different triangles overlap, which means, we only need five now. I haven’t solved this problem completely, but this can be a good start.</p><p>Sixth, about what I mentioned in the title, from the discussion above we now know that different elements are connected by rules, so consider each element to be a node, and building a rule is building an edge in the graph constructed by elements in our problem, and this allow us to view the problem from an entirely new angle.</p><h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>In this term project, I designed a very interesting and generic methodology to solve this kind of problem, and also created an easy-to-use solver and web application to solve the problem.</p><p>Although the problem looks simple and boring, we can actually bring out something new if we go further and see deeper into this problem, that it not only is a high school math problem, but also if we see the elements as nodes and rules as links, it becomes a problem to identify, implement and optimize the links between these nodes.</p><p>Please feel free to go to my class personal website:</p><blockquote><p><a href="https://michaelzengzf.wixsite.com/mysite-1" target="_blank" rel="noopener">https://michaelzengzf.wixsite.com/mysite-1</a></p></blockquote><p>Also, I have deploy the application on my server, try it here:</p><blockquote><p><a href="http://3.16.180.60:8081/GEO-49/cgi-bin/pyweb.py" target="_blank" rel="noopener">http://3.16.180.60:8081/GEO-49/cgi-bin/pyweb.py</a></p></blockquote><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>Li, H. (2018). Hongyi (Owen) Li Graph Solver. Retrieved from Geometry Problem Solver : <a href="http://45mins.org:8006/GPS-geo-js/GEO-1/index.jsp" target="_blank" rel="noopener">http://45mins.org:8006/GPS-geo-js/GEO-1/index.jsp</a></p><p>Nilsson, N. J. (1998). Knowledge-Based Systems. In N. J. Nilsson, Artificial Intelligence: A New Synthesis (p. 274). San Mateo, CA: Morgan Kaufmann.</p><p>WIKIPEDIA. (2018, Nov 6). Solution of triangles. Retrieved from WIKIPEDIA: <a href="https://en.wikipedia.org/wiki/Solution_of_triangles" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Solution_of_triangles</a></p>]]></content>
    
    <summary type="html">
    
      A course project in UCI EECS 118
    
    </summary>
    
      <category term="Project" scheme="http://yoursite.com/categories/Project/"/>
    
    
      <category term="UCI" scheme="http://yoursite.com/tags/UCI/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat Restart Issue</title>
    <link href="http://yoursite.com/2018/12/08/Tomcat-Restart-Issue/"/>
    <id>http://yoursite.com/2018/12/08/Tomcat-Restart-Issue/</id>
    <published>2018-12-09T07:22:20.000Z</published>
    <updated>2018-12-14T01:28:16.597Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>I strongle recommend you to restart the instance, it solves everything.</p><p>But still, use the following methods to guarantee a safe exit of Tomcat:</p><ol><li>edit your tomcat/bin/shutdown.sh</li></ol><blockquote><p>vim path_to_tomcat/bin/shutdown.sh</p></blockquote><ol start="2"><li>add the following lines to it</li></ol><blockquote><p>sudo pkill -f tomcat<br>sudo pkill -f catalina</p></blockquote><ol start="3"><li>save and exit</li></ol><p>That`s it! Next time you run shutdown.sh, tomcat will terminate completely.</p>]]></content>
    
    <summary type="html">
    
      tomcat fail to kill all processes
    
    </summary>
    
      <category term="Server" scheme="http://yoursite.com/categories/Server/"/>
    
    
  </entry>
  
  <entry>
    <title>Java tiny issues</title>
    <link href="http://yoursite.com/2018/12/08/Java-tiny-issues/"/>
    <id>http://yoursite.com/2018/12/08/Java-tiny-issues/</id>
    <published>2018-12-09T07:13:19.000Z</published>
    <updated>2019-01-27T01:31:43.103Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>When using filewriter, remember to do .close() or .flush() to let buffer flush to file.</p>]]></content>
    
    <summary type="html">
    
      some issues about JAVA
    
    </summary>
    
      <category term="JAVA" scheme="http://yoursite.com/categories/JAVA/"/>
    
    
  </entry>
  
</feed>
